{"version":3,"file":"autocomplete.min.js","sources":["../../sources/js/utils/function.js","../../sources/js/utils/keyCodes.js","../../sources/js/script.js"],"sourcesContent":["/**\r\n * Check is a Object\r\n * @param {Object} value\r\n * @returns {Boolean}\r\n */\r\nconst isObject = (value) =>\r\n  value && typeof value === \"object\" && value.constructor === Object;\r\n\r\n/**\r\n * Check if is a Promise\r\n * https://stackoverflow.com/a/53955664/10424385\r\n *\r\n * @param {Object} value\r\n * @returns {Boolean}\r\n */\r\nconst isPromise = (value) => Boolean(value && typeof value.then === \"function\");\r\n\r\n/**\r\n * Set attributes to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {Object} object\r\n */\r\nconst setAttributes = (el, object) => {\r\n  for (let key in object) {\r\n    if (key === \"addClass\") {\r\n      classList(el, \"add\", object[key]);\r\n    } else if (key === \"removeClass\") {\r\n      classList(el, \"remove\", object[key]);\r\n    } else {\r\n      el.setAttribute(key, object[key]);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Get first element from child\r\n *\r\n * @param {HTMLElement} element\r\n * @returns {HTMLELement}\r\n */\r\nconst getFirstElement = (element) =>\r\n  (element.firstElementChild || element).textContent.trim();\r\n\r\n/**\r\n * Scroll to top result-list\r\n * @param {HTMLElement} resultList\r\n * @param {HTMLElement} resultWrap\r\n */\r\nconst scrollResultsToTop = (resultList, resultWrap) => {\r\n  // if there is an overflow of ul element, after\r\n  // opening we always move ul to the top of the results\r\n  resultList.scrollTop = resultList.offsetTop - resultWrap.offsetHeight;\r\n};\r\n\r\n/**\r\n * Adding role, tabindex, aria and call handleMouse\r\n *\r\n * @param {HTMLElement} itemsLi\r\n */\r\nconst addAriaToAllLiElements = (itemsLi) => {\r\n  // add role to all li elements\r\n  for (let i = 0; i < itemsLi.length; i++) {\r\n    setAttributes(itemsLi[i], {\r\n      role: \"option\",\r\n      tabindex: \"-1\",\r\n      \"aria-selected\": \"false\",\r\n      \"aria-setsize\": itemsLi.length,\r\n      \"aria-posinset\": i,\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Show btn to clear data\r\n *\r\n * @param {HTMLElement} clearButton - button to clear data\r\n * @param {Function} destroy - destroy function\r\n */\r\nconst showBtnToClearData = (clearButton = false, destroy) => {\r\n  if (!clearButton) return;\r\n\r\n  classList(clearButton, \"remove\", \"hidden\");\r\n  // add event to clear button\r\n  onEvent(clearButton, \"click\", destroy);\r\n};\r\n\r\n/**\r\n * ClassList add/remove/contains\r\n *\r\n * @param {HTMLElement} element - html element\r\n * @param {String} action - add/remove/contains\r\n * @param {String} className - class name\r\n */\r\nconst classList = (element, action, className) =>\r\n  element.classList[action](className);\r\n\r\n/**\r\n * Set aria-activedescendant\r\n *\r\n * @param {HTMLElement} root - search input\r\n * @param {String} type\r\n */\r\nconst setAriaActivedescendant = (root, type) => {\r\n  setAttributes(root, {\r\n    \"aria-activedescendant\": type || \"\",\r\n  });\r\n};\r\n\r\n/**\r\n * Get height of ul without group class\r\n *\r\n * @param {String} outputUl\r\n * @param {String} classGroup\r\n * @returns {Number}\r\n */\r\nconst getClassGroupHeight = (outputUl, classGroup) => {\r\n  // get height of ul without group class\r\n  const allLiElements = document.querySelectorAll(\r\n    `#${outputUl} > li:not(.${classGroup})`\r\n  );\r\n  let height = 0;\r\n  [].slice.call(allLiElements).map((el) => (height += el.offsetHeight));\r\n\r\n  // return height\r\n  return height;\r\n};\r\n\r\n/**\r\n * Scroll into view when press up/down arrows\r\n *\r\n * @param {HTMLElement} target\r\n * @param {HTMLElement} outputUl\r\n * @param {String} classGroup\r\n * @param {HTMLElement} resultList\r\n */\r\nconst followActiveElement = (target, outputUl, classGroup, resultList) => {\r\n  const previusElement = resultList.previousSibling;\r\n\r\n  const previusElementHeight = previusElement ? previusElement.offsetHeight : 0;\r\n\r\n  if (target.getAttribute(\"aria-posinset\") == \"0\") {\r\n    resultList.scrollTop =\r\n      target.offsetTop - getClassGroupHeight(outputUl, classGroup);\r\n  }\r\n\r\n  if (target.offsetTop - previusElementHeight < resultList.scrollTop) {\r\n    resultList.scrollTop = target.offsetTop - previusElementHeight;\r\n  } else {\r\n    const offsetBottom =\r\n      target.offsetTop + target.offsetHeight - previusElementHeight;\r\n    const scrollBottom = resultList.scrollTop + resultList.offsetHeight;\r\n    if (offsetBottom > scrollBottom) {\r\n      resultList.scrollTop = offsetBottom - resultList.offsetHeight;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Create output-list and put after search input\r\n *\r\n * @param {HTMLElement} root - search input\r\n * @param {HTMLElement} resultList - output-list ul\r\n * @param {String} outputUl - id name of output-list\r\n * @param {HTMLElement} resultWrap - wrapper ul element\r\n * @param {String} prefix - add prefix to all class auto\r\n */\r\nconst output = (root, resultList, outputUl, resultWrap, prefix) => {\r\n  // set attribute to results-list\r\n  setAttributes(resultList, {\r\n    id: outputUl,\r\n    tabIndex: \"0\",\r\n    role: \"listbox\",\r\n  });\r\n\r\n  // add class to wrap element\r\n  setAttributes(resultWrap, {\r\n    addClass: `${prefix}-results-wrapper`,\r\n  });\r\n\r\n  // insert the results into the wrap element\r\n  resultWrap.insertAdjacentElement(\"beforeend\", resultList);\r\n\r\n  // insert the wrap element after the search input\r\n  root.parentNode.insertBefore(resultWrap, root.nextSibling);\r\n};\r\n\r\n/**\r\n * Create element\r\n *\r\n * @param {String} type - type of element\r\n * @returns {HTMLDivElement}\r\n */\r\nconst createElement = (type) => document.createElement(type);\r\n\r\n/**\r\n * Get element\r\n *\r\n * @param {String} element\r\n * @returns {HTMLElement}\r\n */\r\nconst select = (element) => document.querySelector(element);\r\n\r\n/**\r\n * Event listeners\r\n *\r\n * @param {HTMLElement} element\r\n * @param {String} action\r\n * @param {Function} callback\r\n */\r\nconst onEvent = (element, action, callback) => {\r\n  element.addEventListener(action, callback);\r\n};\r\n\r\n/**\r\n * Remove event listeners\r\n */\r\nconst offEvent = (element, action, callback) => {\r\n  element.removeEventListener(action, callback);\r\n};\r\n\r\nexport {\r\n  addAriaToAllLiElements,\r\n  classList,\r\n  createElement,\r\n  followActiveElement,\r\n  getFirstElement,\r\n  isObject,\r\n  isPromise,\r\n  offEvent,\r\n  onEvent,\r\n  output,\r\n  scrollResultsToTop,\r\n  select,\r\n  setAriaActivedescendant,\r\n  setAttributes,\r\n  showBtnToClearData,\r\n};\r\n","/**\r\n * Key codes\r\n */\r\nconst keyCodes = {\r\n  ESC: 27,\r\n  ENTER: 13,\r\n  UP: 38,\r\n  DOWN: 40,\r\n  TAB: 9,\r\n};\r\n\r\nexport default keyCodes;\r\n","import {\r\n  addAriaToAllLiElements,\r\n  classList,\r\n  createElement,\r\n  followActiveElement,\r\n  getFirstElement,\r\n  isObject,\r\n  isPromise,\r\n  offEvent,\r\n  onEvent,\r\n  output,\r\n  scrollResultsToTop,\r\n  select,\r\n  setAriaActivedescendant,\r\n  setAttributes,\r\n  showBtnToClearData,\r\n} from \"./utils/function\";\r\n\r\nimport keyCodes from \"./utils/keyCodes\";\r\n\r\n/**\r\n * @class Autocomplete\r\n */\r\nexport default class Autocomplete {\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {String} element\r\n   * @param {Object} object\r\n   */\r\n  constructor(\r\n    element,\r\n    {\r\n      delay = 500,\r\n      clearButton = true,\r\n      clearButtonOnInitial = false,\r\n      howManyCharacters = 1,\r\n      selectFirst = false,\r\n      insertToInput = false,\r\n      showAllValues = false,\r\n      cache = false,\r\n      disableCloseOnSelect = false,\r\n      preventScrollUp = false,\r\n      classGroup,\r\n      classPreventClosing,\r\n      classPrefix,\r\n      ariaLabelClear,\r\n      onSearch,\r\n      onResults = () => {},\r\n      onSubmit = () => {},\r\n      onOpened = () => {},\r\n      onReset = () => {},\r\n      onRender = () => {},\r\n      onClose = () => {},\r\n      noResults = () => {},\r\n      onSelectedItem = () => {},\r\n    },\r\n  ) {\r\n    this._id = element;\r\n    this._root = document.getElementById(element);\r\n    this._onSearch = isPromise(onSearch)\r\n      ? onSearch\r\n      : ({ currentValue, element }) =>\r\n          Promise.resolve(onSearch({ currentValue, element }));\r\n    this._onResults = onResults;\r\n    this._onRender = onRender;\r\n    this._onSubmit = onSubmit;\r\n    this._onSelected = onSelectedItem;\r\n    this._onOpened = onOpened;\r\n    this._onReset = onReset;\r\n    this._noResults = noResults;\r\n    this._onClose = onClose;\r\n\r\n    this._delay = delay;\r\n    this._characters = howManyCharacters;\r\n    this._clearButton = clearButton;\r\n    this._clearButtonOnInitial = clearButtonOnInitial;\r\n    this._selectFirst = selectFirst;\r\n    this._toInput = insertToInput;\r\n    this._showAll = showAllValues;\r\n    this._classGroup = classGroup;\r\n    this._prevClosing = classPreventClosing;\r\n    this._clearBtnAriLabel = ariaLabelClear\r\n      ? ariaLabelClear\r\n      : \"clear the search query\";\r\n    this._prefix = classPrefix ? `${classPrefix}-auto` : \"auto\";\r\n    this._disable = disableCloseOnSelect;\r\n    this._preventScrollUp = preventScrollUp;\r\n\r\n    // default config\r\n    this._cache = cache;\r\n    this._outputUl = `${this._prefix}-${this._id}-results`;\r\n    this._cacheData = `data-cache-auto-${this._id}`;\r\n    this._isLoading = `${this._prefix}-is-loading`;\r\n    this._isActive = `${this._prefix}-is-active`;\r\n    this._activeList = `${this._prefix}-selected`;\r\n    this._selectedOption = `${this._prefix}-selected-option`;\r\n    this._err = `${this._prefix}-error`;\r\n    this._regex = /[|\\\\{}()[\\]^$+*?.]/g;\r\n    this._timeout = null;\r\n\r\n    this._resultWrap = createElement(\"div\");\r\n    this._resultList = createElement(\"ul\");\r\n    this._clearBtn = createElement(\"button\");\r\n\r\n    this._initial();\r\n  }\r\n\r\n  /**\r\n   * Initial function\r\n   */\r\n  _initial = () => {\r\n    this._clearbutton();\r\n\r\n    output(\r\n      this._root,\r\n      this._resultList,\r\n      this._outputUl,\r\n      this._resultWrap,\r\n      this._prefix,\r\n    );\r\n\r\n    // default aria\r\n    onEvent(this._root, \"input\", this._handleInput);\r\n\r\n    // show all values on click root input\r\n    this._showAll && onEvent(this._root, \"click\", this._handleInput);\r\n\r\n    // calback functions\r\n    this._onRender({\r\n      element: this._root,\r\n      results: this._resultList,\r\n    });\r\n\r\n    // show clear button if\r\n    if (this._clearButtonOnInitial) {\r\n      showBtnToClearData(this._clearBtn, this.destroy);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Actions on input\r\n   *\r\n   * @param {String} type - set attribute depending on type\r\n   * @param {String} target\r\n   */\r\n  _cacheAct = (type, target) => {\r\n    if (!this._cache) return;\r\n\r\n    if (type === \"update\") {\r\n      this._root.setAttribute(this._cacheData, target.value);\r\n    } else if (type === \"remove\") {\r\n      this._root.removeAttribute(this._cacheData);\r\n    } else {\r\n      this._root.value = this._root.getAttribute(this._cacheData);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle input\r\n   *\r\n   * @param {Event} object\r\n   */\r\n  _handleInput = ({ target, type }) => {\r\n    if (\r\n      this._root.getAttribute(\"aria-expanded\") === \"true\" &&\r\n      type === \"click\"\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // replace all special characters\r\n    const regex = target.value.replace(this._regex, \"\\\\$&\");\r\n\r\n    // update data attribute cache\r\n    this._cacheAct(\"update\", target);\r\n\r\n    const delay = this._showAll ? 0 : this._delay;\r\n    // clear timeout\r\n    clearTimeout(this._timeout);\r\n    this._timeout = setTimeout(() => {\r\n      this._searchItem(regex.trim());\r\n    }, delay);\r\n  };\r\n\r\n  /**\r\n   * Default aria\r\n   */\r\n  _reset = () => {\r\n    // remove class isActive\r\n    classList(this._resultWrap, \"remove\", this._isActive);\r\n\r\n    const ariaAcrivedescentDefault = {\r\n      \"aria-owns\": `${this._id}-list`,\r\n      \"aria-expanded\": \"false\",\r\n      \"aria-autocomplete\": \"list\",\r\n      role: \"combobox\",\r\n      removeClass: \"auto-expanded\",\r\n    };\r\n\r\n    const ariaAcrivedescent = this._preventScrollUp\r\n      ? ariaAcrivedescentDefault\r\n      : { ...ariaAcrivedescentDefault, \"aria-activedescendant\": \"\" };\r\n\r\n    // set attributes to root - input\r\n    setAttributes(this._root, ariaAcrivedescent);\r\n\r\n    if (!this._preventScrollUp) {\r\n      // set default aria-selected, remove id and remove class 'auto-selected'\r\n      this._removeAria(select(`.${this._activeList}`));\r\n\r\n      // set index\r\n      this._index = this._selectFirst ? 0 : -1;\r\n    }\r\n\r\n    // remove result when lengh = 0 and insertToInput is false\r\n    // https://github.com/tomickigrzegorz/autocomplete/issues/136\r\n    if ((this._matches?.length == 0 && !this._toInput) || this._showAll) {\r\n      this._resultList.textContent = \"\";\r\n    }\r\n\r\n    // callback function\r\n    this._onClose();\r\n  };\r\n\r\n  /**\r\n   * The async function gets the text from the search\r\n   * and returns the matching array\r\n   *\r\n   * @param {String} value\r\n   */\r\n  _searchItem = (value) => {\r\n    this._value = value;\r\n\r\n    // if searching show loading icon\r\n    this._onLoading(true);\r\n\r\n    // hide button clear\r\n    showBtnToClearData(this._clearBtn, this.destroy);\r\n\r\n    // if there is no value and clearButton is true\r\n    if (value.length == 0 && this._clearButton) {\r\n      classList(this._clearBtn, \"add\", \"hidden\");\r\n    }\r\n\r\n    // if declare characters more then value.len and showAll is false\r\n    // remove class isActive\r\n    if (this._characters > value.length && !this._showAll) {\r\n      this._onLoading();\r\n      return;\r\n    }\r\n\r\n    // callblack function onSearch\r\n    this._onSearch({ currentValue: value, element: this._root })\r\n      .then((result) => {\r\n        const rootValueLength = this._root.value.length;\r\n        const resultLength = result.length;\r\n        // set no result\r\n        this._matches = Array.isArray(result)\r\n          ? result\r\n          : JSON.parse(JSON.stringify(result));\r\n\r\n        this._onLoading();\r\n        this._error();\r\n\r\n        // if use destroy() method\r\n        if (resultLength == 0 && rootValueLength == 0) {\r\n          classList(this._clearBtn, \"add\", \"hidden\");\r\n        }\r\n\r\n        if (resultLength == 0 && rootValueLength) {\r\n          classList(this._root, \"remove\", \"auto-expanded\");\r\n          this._reset();\r\n          this._noResults({\r\n            element: this._root,\r\n            currentValue: value,\r\n            template: this._results,\r\n          });\r\n          this._events();\r\n        } else if (resultLength > 0 || isObject(result)) {\r\n          this._index = this._selectFirst ? 0 : -1;\r\n          this._results();\r\n          this._events();\r\n        }\r\n      })\r\n      .catch(() => {\r\n        this._onLoading();\r\n        this._reset();\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Set or remove loading class\r\n   *\r\n   * @param {Boolean} type\r\n   */\r\n  _onLoading = (type) =>\r\n    this._root.parentNode.classList[type ? \"add\" : \"remove\"](this._isLoading);\r\n\r\n  /**\r\n   * Set error class to the root element\r\n   */\r\n  _error = () => classList(this._root, \"remove\", this._err);\r\n\r\n  /**\r\n   * Events\r\n   */\r\n  _events = () => {\r\n    // handle click on keydown [up, down, enter, tab, esc]\r\n    onEvent(this._root, \"keydown\", this._handleKeys);\r\n\r\n    onEvent(this._root, \"click\", this._handleShowItems);\r\n\r\n    // close expanded items\r\n    onEvent(document, \"click\", this._handleDocClick);\r\n\r\n    // temporarily disabled mouseleave\r\n    [\"mousemove\", \"click\"].map((eventType) => {\r\n      onEvent(this._resultList, eventType, this._handleMouse);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Results\r\n   *\r\n   * @param {HTMLElement|String} template - html or string returned from the function,\r\n   * look at the example - https://github.com/tomickigrzegorz/autocomplete/blob/master/docs/js/examples/no-results.js#L30\r\n   */\r\n  _results = (template) => {\r\n    // set attribute to root\r\n    setAttributes(this._root, {\r\n      \"aria-expanded\": \"true\",\r\n      addClass: `${this._prefix}-expanded`,\r\n    });\r\n\r\n    // clear result list\r\n    this._resultList.textContent = \"\";\r\n\r\n    // add all found records to otput ul\r\n    const dataResults =\r\n      this._matches.length === 0\r\n        ? this._onResults({\r\n            currentValue: this._value,\r\n            matches: 0,\r\n            template,\r\n          })\r\n        : this._onResults({\r\n            currentValue: this._value,\r\n            matches: this._matches,\r\n            classGroup: this._classGroup,\r\n          });\r\n\r\n    // add data to ul\r\n    this._resultList.insertAdjacentHTML(\"afterbegin\", dataResults);\r\n\r\n    // add class isActive\r\n    classList(this._resultWrap, \"add\", this._isActive);\r\n\r\n    const checkIfClassGroupExist = this._classGroup\r\n      ? `:not(.${this._classGroup})`\r\n      : \"\";\r\n\r\n    this._itemsLi = document.querySelectorAll(\r\n      `#${this._outputUl} > li${checkIfClassGroupExist}`,\r\n    );\r\n\r\n    // adding role, tabindex and aria\r\n    addAriaToAllLiElements(this._itemsLi);\r\n\r\n    // action on open results\r\n    this._onOpened({\r\n      type: \"results\",\r\n      element: this._root,\r\n      results: this._resultList,\r\n    });\r\n\r\n    // select first element\r\n    this._selectFirstElement();\r\n\r\n    // move the view item to the first item\r\n    // this.resultList.scrollTop = 0;\r\n    // if (this._preventScrollUp) return;\r\n    scrollResultsToTop(this._resultList, this._resultWrap);\r\n  };\r\n\r\n  /**\r\n   * Hangle click on document\r\n   *\r\n   * @param {Event} object\r\n   */\r\n  _handleDocClick = ({ target }) => {\r\n    let disableClose = null;\r\n\r\n    // if 'target' is a ul and 'disableCloseOnSelect'\r\n    // is a 'true' set 'disableClose' on true\r\n    if (\r\n      (target.closest(\"ul\") && this._disable) ||\r\n      // when class classDisableClose\r\n      // then do not not close results\r\n      target.closest(`.${this._prevClosing}`)\r\n    ) {\r\n      disableClose = true;\r\n    }\r\n\r\n    if (target.id !== this._id && !disableClose) {\r\n      this._reset();\r\n      return;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Select first element\r\n   */\r\n  _selectFirstElement = () => {\r\n    this._removeAria(select(`.${this._activeList}`));\r\n\r\n    if (!this._selectFirst) {\r\n      return;\r\n    }\r\n\r\n    const { firstElementChild } = this._resultList;\r\n\r\n    const classSelectFirst =\r\n      this._classGroup && this._matches.length > 0 && this._selectFirst\r\n        ? firstElementChild.nextElementSibling\r\n        : firstElementChild;\r\n\r\n    // calback function onSelect when first element is true\r\n    this._onSelected({\r\n      index: this._index,\r\n      element: this._root,\r\n      object: this._matches[this._index],\r\n    });\r\n\r\n    // set attribute to first element\r\n    setAttributes(classSelectFirst, {\r\n      id: `${this._selectedOption}-0`,\r\n      addClass: this._activeList,\r\n      \"aria-selected\": \"true\",\r\n    });\r\n\r\n    // set aria active descendant\r\n    setAriaActivedescendant(this._root, `${this._selectedOption}-0`);\r\n  };\r\n\r\n  /**\r\n   * show items when items.length > 0 and is not empty\r\n   */\r\n  _handleShowItems = () => {\r\n    // if resultWrap is not active and resultList is not empty\r\n    if (\r\n      this._resultList.textContent.length > 0 &&\r\n      !classList(this._resultWrap, \"contains\", this._isActive)\r\n    ) {\r\n      // set attribute to root\r\n      setAttributes(this._root, {\r\n        \"aria-expanded\": \"true\",\r\n        addClass: `${this._prefix}-expanded`,\r\n      });\r\n\r\n      // add isActive class to resultWrap\r\n      classList(this._resultWrap, \"add\", this._isActive);\r\n\r\n      // move the view item to the first item\r\n      // this.resultList.scrollTop = 0;\r\n      if (!this._preventScrollUp) {\r\n        scrollResultsToTop(this._resultList, this._resultWrap);\r\n        // select first element\r\n        this._selectFirstElement();\r\n      }\r\n\r\n      // callback function\r\n      this._onOpened({\r\n        type: \"showItems\",\r\n        element: this._root,\r\n        results: this._resultList,\r\n      });\r\n\r\n      if (!this._cache) return;\r\n      this._cacheAct(\"update\", this._root);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Adding text from the list when li is clicking\r\n   * or adding aria-selected to li elements\r\n   *\r\n   * @param {Event} event\r\n   */\r\n  _handleMouse = (event) => {\r\n    event.preventDefault();\r\n\r\n    const { target, type } = event;\r\n    const targetClosest = target.closest(\"li\");\r\n    const targetClosestRole = targetClosest?.hasAttribute(\"role\");\r\n    const activeClass = this._activeList;\r\n    const activeClassElement = select(`.${activeClass}`);\r\n\r\n    if (\r\n      !targetClosest ||\r\n      !targetClosestRole ||\r\n      target.closest(`.${this._prevClosing}`)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (type === \"click\") {\r\n      // click on li get element\r\n      // get text from clicked li\r\n      this._getTextFromLi(targetClosest);\r\n    }\r\n\r\n    if (\r\n      type === \"mousemove\" &&\r\n      !classList(targetClosest, \"contains\", activeClass)\r\n    ) {\r\n      this._removeAria(activeClassElement);\r\n\r\n      // add aria to li\r\n      this._setAria(targetClosest);\r\n      this._index = this._indexLiSelected(targetClosest);\r\n\r\n      this._onSelected({\r\n        index: this._index,\r\n        element: this._root,\r\n        object: this._matches[this._index],\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get text from li on enter or click\r\n   *\r\n   * @param {HTMLElement} element\r\n   */\r\n  _getTextFromLi = (element) => {\r\n    if (!element || this._matches.length === 0) {\r\n      // set default settings\r\n      !this._disable && this._reset();\r\n\r\n      return;\r\n    }\r\n\r\n    // show clearBtn when select element\r\n    this._clearButton && classList(this._clearBtn, \"remove\", \"hidden\");\r\n\r\n    // get first element from li and set it to root\r\n    this._root.value = getFirstElement(element);\r\n\r\n    // onSubmit passing text to function\r\n    this._onSubmit({\r\n      index: this._index,\r\n      element: this._root,\r\n      object: this._matches[this._index],\r\n      results: this._resultList,\r\n    });\r\n\r\n    // set default settings\r\n    if (!this._disable) {\r\n      if (!this._preventScrollUp) {\r\n        this._removeAria(element);\r\n      }\r\n      this._reset();\r\n    }\r\n\r\n    // remove cache\r\n    this._cacheAct(\"remove\");\r\n  };\r\n\r\n  /**\r\n   * Return which li element was selected\r\n   * by hovering the mouse over\r\n   *\r\n   * @param {HTMLElement} target\r\n   * @returns {Number}\r\n   */\r\n  _indexLiSelected = (target) =>\r\n    // get index of li element\r\n    Array.prototype.indexOf.call(this._itemsLi, target);\r\n\r\n  /**\r\n   * Navigating the elements li and enter\r\n   *\r\n   * @param {Event} event\r\n   */\r\n  _handleKeys = (event) => {\r\n    const { keyCode } = event;\r\n\r\n    const resultList = classList(this._resultWrap, \"contains\", this._isActive);\r\n\r\n    const matchesLength = this._matches.length + 1;\r\n    this._selectedLi = select(`.${this._activeList}`);\r\n\r\n    // switch between keys\r\n    switch (keyCode) {\r\n      case keyCodes.UP:\r\n      case keyCodes.DOWN:\r\n        // Wrong cursor position in the input field #62\r\n        // Prevents the cursor from moving to the beginning\r\n        // of input as the cursor hovers over the results.\r\n        event.preventDefault();\r\n\r\n        if ((matchesLength <= 1 && this._selectFirst) || !resultList) {\r\n          return;\r\n        }\r\n\r\n        // if keyCode is up\r\n        if (keyCode === keyCodes.UP) {\r\n          if (this._index < 0) {\r\n            this._index = matchesLength - 1;\r\n          }\r\n          this._index -= 1;\r\n        } else {\r\n          this._index += 1;\r\n          if (this._index >= matchesLength) {\r\n            this._index = 0;\r\n          }\r\n        }\r\n\r\n        // remove aria-selected\r\n        this._removeAria(this._selectedLi);\r\n\r\n        if (this._index >= 0 && this._index < matchesLength - 1) {\r\n          const selectedElement = this._itemsLi[this._index];\r\n\r\n          if (this._toInput && resultList) {\r\n            this._root.value = getFirstElement(selectedElement);\r\n          }\r\n\r\n          // callback function\r\n          this._onSelected({\r\n            index: this._index,\r\n            element: this._root,\r\n            object: this._matches[this._index],\r\n          });\r\n\r\n          // set aria-selected\r\n          this._setAria(selectedElement);\r\n        } else {\r\n          // catch action\r\n          this._cacheAct();\r\n          setAriaActivedescendant(this._root);\r\n\r\n          this._onSelected({\r\n            index: null,\r\n            element: this._root,\r\n            object: null,\r\n          });\r\n        }\r\n\r\n        break;\r\n      // keycode enter\r\n      case keyCodes.ENTER:\r\n        // https:github.com/tomickigrzegorz/autocomplete/issues/145\r\n        event.preventDefault();\r\n\r\n        this._getTextFromLi(this._selectedLi);\r\n        break;\r\n\r\n      // keycode escape and keycode tab\r\n      case keyCodes.TAB:\r\n      case keyCodes.ESC:\r\n        event.stopPropagation();\r\n        this._reset();\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set aria label on item li\r\n   *\r\n   * @param {HTMLElement} target\r\n   */\r\n  _setAria = (target) => {\r\n    const selectedOption = `${this._selectedOption}-${this._indexLiSelected(\r\n      target,\r\n    )}`;\r\n\r\n    // set aria to li\r\n    setAttributes(target, {\r\n      id: selectedOption,\r\n      \"aria-selected\": \"true\",\r\n      addClass: this._activeList,\r\n    });\r\n\r\n    setAriaActivedescendant(this._root, selectedOption);\r\n\r\n    // scrollIntoView when press up/down arrows\r\n    followActiveElement(\r\n      target,\r\n      this._outputUl,\r\n      this._classGroup,\r\n      this._resultList,\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Remove aria label from item li\r\n   *\r\n   * @param {HTMLElement} element\r\n   */\r\n  _removeAria = (element) => {\r\n    if (!element) return;\r\n\r\n    // remove aria from li\r\n    setAttributes(element, {\r\n      id: \"\",\r\n      removeClass: this._activeList,\r\n      \"aria-selected\": \"false\",\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Create clear button and\r\n   * removing text from the input field\r\n   */\r\n  _clearbutton = () => {\r\n    // stop when clear button is disabled\r\n    if (!this._clearButton) return;\r\n\r\n    // add aria to clear button\r\n    setAttributes(this._clearBtn, {\r\n      class: `${this._prefix}-clear hidden`,\r\n      type: \"button\",\r\n      title: this._clearBtnAriLabel,\r\n      \"aria-label\": this._clearBtnAriLabel,\r\n    });\r\n\r\n    // insert clear button after input - root\r\n    this._root.insertAdjacentElement(\"afterend\", this._clearBtn);\r\n  };\r\n\r\n  /**\r\n   * Rerender rows without remove root input and close elements\r\n   */\r\n  rerender = (inputValue) => {\r\n    const text = inputValue?.trim() ? inputValue.trim() : this._root.value;\r\n    if (inputValue?.trim()) {\r\n      this._root.value = inputValue.trim();\r\n      this._cacheAct(\"update\", this._root);\r\n    }\r\n    const regexText = text.replace(this._regex, \"\\\\$&\");\r\n    this._searchItem(regexText.trim());\r\n  };\r\n\r\n  /**\r\n   * Clicking on the clear button\r\n   * publick destroy method\r\n   */\r\n  destroy = () => {\r\n    // if clear button is true then add class hidden\r\n    this._clearButton && classList(this._clearBtn, \"add\", \"hidden\");\r\n    // clear value searchId\r\n    this._root.value = \"\";\r\n    // set focus\r\n    this._root.focus();\r\n    // remove li from ul\r\n    this._resultList.textContent = \"\";\r\n    // set default aria\r\n    this._reset();\r\n    // remove error if exist\r\n    this._error();\r\n\r\n    // callback function\r\n    this._onReset(this._root);\r\n\r\n    // remove listener\r\n    offEvent(this._root, \"keydown\", this._handleKeys);\r\n    offEvent(this._root, \"click\", this._handleShowItems);\r\n    // remove listener on click on document\r\n    offEvent(document, \"click\", this._handleDocClick);\r\n  };\r\n}\r\n"],"names":["setAttributes","el","object","key","classList","setAttribute","getFirstElement","element","firstElementChild","textContent","trim","scrollResultsToTop","resultList","resultWrap","scrollTop","offsetTop","offsetHeight","showBtnToClearData","clearButton","destroy","onEvent","action","className","setAriaActivedescendant","root","type","followActiveElement","target","outputUl","classGroup","previusElement","previousSibling","previusElementHeight","getAttribute","getClassGroupHeight","allLiElements","document","querySelectorAll","height","slice","call","map","offsetBottom","createElement","select","querySelector","callback","addEventListener","offEvent","removeEventListener","keyCodes","constructor","_ref","delay","clearButtonOnInitial","howManyCharacters","selectFirst","insertToInput","showAllValues","cache","disableCloseOnSelect","preventScrollUp","classPreventClosing","classPrefix","ariaLabelClear","onSearch","onResults","onSubmit","onOpened","onReset","onRender","onClose","noResults","onSelectedItem","value","this","_initial","output","prefix","_clearbutton","_root","_resultList","_outputUl","_resultWrap","_prefix","id","tabIndex","role","addClass","insertAdjacentElement","parentNode","insertBefore","nextSibling","_handleInput","_showAll","_onRender","results","_clearButtonOnInitial","_clearBtn","_cacheAct","_cache","_cacheData","removeAttribute","_ref2","regex","replace","_regex","_delay","clearTimeout","_timeout","setTimeout","_searchItem","_reset","_this$_matches","_isActive","ariaAcrivedescentDefault","_id","removeClass","ariaAcrivedescent","_preventScrollUp","_removeAria","_activeList","_index","_selectFirst","_matches","length","_toInput","_onClose","_value","_onLoading","_clearButton","_characters","_onSearch","currentValue","then","result","rootValueLength","resultLength","Array","isArray","JSON","parse","stringify","_error","_noResults","template","_results","_events","Object","isObject","catch","_isLoading","_err","_handleKeys","_handleShowItems","_handleDocClick","eventType","_handleMouse","dataResults","_onResults","matches","_classGroup","insertAdjacentHTML","checkIfClassGroupExist","_itemsLi","itemsLi","i","tabindex","addAriaToAllLiElements","_onOpened","_selectFirstElement","_ref3","disableClose","closest","_disable","_prevClosing","classSelectFirst","nextElementSibling","_onSelected","index","_selectedOption","event","preventDefault","targetClosest","targetClosestRole","hasAttribute","activeClass","activeClassElement","_getTextFromLi","_setAria","_indexLiSelected","_onSubmit","prototype","indexOf","keyCode","matchesLength","_selectedLi","selectedElement","stopPropagation","selectedOption","class","title","_clearBtnAriLabel","rerender","inputValue","text","regexText","focus","_onReset","getElementById","Boolean","_ref4","Promise","resolve"],"mappings":"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"}